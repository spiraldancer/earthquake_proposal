library(caret)
library(kernlab)
install.packages("slidify")
install.packages("ggplot2", "devtools")
install.packages("ggplot2")
install.packages("devtools")
swirl()
library(swirl)
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
group_by(cran,by_package)
by_packages <- group_by(cran)
by_packages <- group_by(cran, package)
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size0))
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
head(top_counts, 20)
arrange(top_counts, desc(count))
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
top_uniquw
top_unique
arange(top_unique, desc(unique)
arange(top_unique, desc(unique))
arrange(top_unique, desc(unique))
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
student2
students2
gather(students2, sex_class, count, -grade)
gather(students2, sex_class, count)
res <- gather(students2, sex_class, count, -grade)
res
?seperate
?separate
separate(data = res, col = sex_class, into = c("sex","class"))
submit()
student3
students3
?gather
submit()
submit()
?spread
submit()
submit()
extract_numeric("class5")
extract_numeric("class5")
submit()
submit()
submit()
data
students4
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
rbind_list(passed, failed)
sat
?seperate
?separate
submit()
?gather
?separate
submit()
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_da
this_day
year()
year(this_day)
wday(this_day)
wday(this_day, label = RUE)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
minute()
minute(this_moment)
my_date <-ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("19201-2")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
update(this_moment)
this_moment <- update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34, seconds = 0)
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- nyc + hours(15) + minites(50)
arrive <- depart + hours(15) + minites(50)
?days
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
?"%>%"
?"%<%"
require(data.table)
R.version.string
install.packages("swirl")
install.packages("swirl")
install_from_swirl("Statistical Inference")
library(swirl)
install_from_swirl("Statistical Inference")
swirl
swirl()
15/16
33/36
deck
52
4/52
5/52
4/52
0
12/52
2/51
0.64
0.64
mypdf
mypdf(0)
integrate(mypdf,0,1.6)
0.9375
info()
0.0625
.5
1.41
.7
.25
1
1.4
1.41
1.414
1.4142
1.41421
1.41421356
install.packages("swirl")
install.packages("swirl")
library(swirl)
swirl()
plot(child ~ parent, galton)
plot(jitter(child,4) ~ parent, galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd=3, col='red')
summary(regrline)
fit <- lm(child ~ parent, galton)
summary(fit)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic <- fit$coef
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
lhs - rhs
all.equal(lhs,rhs)
varChild <- var(rhs,ols.slope)
var()
varChild <- var(ols.slope)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- est()
varEst <- est(ols.slope, ols.ic)
varEst <- var(est(ols.slope, ols.ic))
all.equal(varRes,varEst)
all.equal(varChild,varRes+varEst)
efit <- lm(accel ~ mag+dist, attenu)
efit
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
k
kk
kk
kk
kk
l()
lsm()
lm(x~y)
lm(x~w)
lm(w~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(x~y)
data(mtcars)
lm(mtcars$mpg,mtcars$weight)
lm(mtcars$mpg~mtcars$weight)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
sc.x <- scale(x)
colMean(sc.x)
colMeans(sc.x)
apply(sc.x, 2, sd)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
mean(x)
std(x)
sd(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
summary(lm(mtcars$mpg ~mtcars$wieghts))
summary(lm(mtcars$mpg ~mtcars$weight))
lm(mtcars$mpg ~mtcars$weight)
mtcars
mtcars$mpg
mtcars$weight
View(mtcars)
View(mtcars)
lm(mtcars$mpg ~mtcars$wt)
sumary(lm(mtcars$mpg ~mtcars$wt))
summary(lm(mtcars$mpg ~mtcars$wt))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~0+x)
library("rCharts")
install.packages(rCharts)
install.packages("rCharts")
install.packages("rCharts")
install.packages('devtools')
devtools::install_github('rstudio/shinyapps')
install.packages('devtools')
devtools::install_github('rstudio/shinyapps')
library(shinyapps)
install_github('ramnathv/rCharts')
library(devtools)
install_github('ramnathv/rCharts')
library(rCharts)
shinyapps::setAccountInfo(name='jenndshinc', token='6C7C79A09FB5B053C61C62724D52D39F', secret='mRG2f1ecWw89HP5rEYp0F1YWxSj95HbQBD+fDGc6')
library(shinyapps)
unzip("C:\Users\jessiejoyride\AppData\Local\TempDDPQuiz3_1.0.zip", exdir = "C:\Users\jessiejoyride\Documents\Coursera\DataScientist_2014\09_Developing_Data_Products\quizes")
unzip("C:/Users/jessiejoyride/AppData/Local/TempDDPQuiz3_1.0.zip", exdir = "C:/Users/jessiejoyride/Documents/Coursera/DataScientist_2014/09_Developing_Data_Products/quizes")
?colSums
?lm
?predict
?dgamma
?lm
?predict
?qnorm
qnorm(.95, mean = 0, sd = 1)
qnorm(.95, mean = 1100, sd = 75)
pnorm(70, mean 80, sd=10)
pnorm(70, mean =80, sd=10)
pnorm(70, mean =80, sd=10, lower.tail = TRUE)
pnorm(70, mean =80, sd=10, lower.tail = FALSE)
qnorm(.95, mean = 1100, sd = 75)
pnorm(-1)
choose(5,4) *.5^5 + choose(5,5) * .5^8
(choose(5,4) *.5^5 + choose(5,5) * .5^8) + (choose(5,5) *.5^5 + choose(5,5) * .5^8)
pnorm((16-15)/(10/sqrt(100)))-pnorm((14-15)/(10/sqrt(100)))
ppois(10,3)
ppois(10,15)
pnorm(.51, mean = 0.5, sd = sqrt(1 / 12 / 100), lower.tail = FALSE)
?sqrt
sqrt(1/12)
(1/12)^2
library(shiny)
library(shinyapps)
install.packages("shiny")
library(slidify)
install.packages("slidify")
install.packages("devtools")
library(devtools)
devtools:install_github("slidify")
library(devtools)
install.packages("devtools")
library(devtools)
install.packages("devtools")
install.packages("shiny")
require(devtools)
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
?setwd
setwd("C:/Users/jessiejoyride/Documents/Coursera/DataScientist_2014/09_Developing_Data_Products/assignments/assignment")
library(slidify)
author("earthquake_proposal")
library(shiny)
library(shinyapps)
